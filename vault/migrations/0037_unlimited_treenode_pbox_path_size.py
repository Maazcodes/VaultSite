# Generated by Django 3.2.9 on 2022-04-15 20:53

"""This migration:

* expands Treenode.pbox_path from varchar(255) -> text
* makes TreeNode.id bigint
* makes TreeNode.size bigint
"""

from django.db import migrations, models


SQL = """
DROP TRIGGER IF EXISTS treenode_file_accounting_delete_trg ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_file_accounting_insert_trg ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_file_accounting_update_trg ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_path_after_trg ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_path_insert_trg ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_path_prevent_null_trg  ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_path_update_trg ON vault_treenode;
DROP TRIGGER IF EXISTS treenode_set_new_file_count ON vault_treenode;
"""

REVERSE_SQL = """
CREATE TRIGGER treenode_file_accounting_delete_trg
    AFTER DELETE ON vault_treenode
    FOR EACH ROW
    WHEN (old.node_type::text = 'FILE'::text OR old.node_type::text = 'FOLDER'::text)
    EXECUTE PROCEDURE _do_treenode_delete_file_accounting();
CREATE TRIGGER treenode_file_accounting_insert_trg
    AFTER INSERT ON vault_treenode
    FOR EACH ROW
    WHEN (new.node_type::text = 'FILE'::text OR new.node_type::text = 'FOLDER'::text)
    EXECUTE PROCEDURE _do_treenode_insert_file_accounting();
CREATE TRIGGER treenode_file_accounting_update_trg
    AFTER UPDATE ON vault_treenode
    FOR EACH ROW
    WHEN (new.node_type::text = 'FILE'::text OR new.node_type::text = 'FOLDER'::text)
    EXECUTE PROCEDURE _do_treenode_update_file_accounting();
CREATE TRIGGER treenode_path_after_trg
    AFTER UPDATE ON vault_treenode
    FOR EACH ROW
    WHEN (new.path IS DISTINCT FROM old.path)
    EXECUTE PROCEDURE _update_descendants_treenode_path();
CREATE TRIGGER treenode_path_insert_trg
    BEFORE INSERT ON vault_treenode
    FOR EACH ROW
    EXECUTE PROCEDURE _update_treenode_path();
CREATE TRIGGER treenode_path_prevent_null_trg
    BEFORE UPDATE ON vault_treenode
    FOR EACH ROW
    WHEN (new.path IS NULL)
    EXECUTE PROCEDURE _reject_null_treenode_path();
CREATE TRIGGER treenode_path_update_trg
    BEFORE UPDATE ON vault_treenode
    FOR EACH ROW
    WHEN (old.parent_id IS DISTINCT FROM new.parent_id OR old.id IS DISTINCT FROM new.id)
    EXECUTE PROCEDURE _update_treenode_path();
CREATE TRIGGER treenode_set_new_file_count
    BEFORE INSERT ON vault_treenode
    FOR EACH ROW
    WHEN (new.node_type::text = 'FILE'::text)
    EXECUTE PROCEDURE _do_treenode_set_new_file_count();
"""


class Migration(migrations.Migration):

    dependencies = [
        ("vault", "0036_correct_treenode_hard_deletion_accounting"),
    ]

    operations = [
        # Note: postgres forbids changing datatypes of fields used in trigger
        # definitions, so we first drop all triggers, and restore them as the
        # final step
        migrations.RunSQL(
            sql=SQL,
            reverse_sql=REVERSE_SQL,
        ),
        migrations.AlterField(
            model_name="treenode",
            name="pbox_path",
            field=models.TextField(blank=True, null=True),
        ),
        # Note: we've had two pending field type changes pending for a long
        # time and I'm taking care of them here. I think this is necessary
        # because TreeNode.id was originally created as `AutoField`:
        # https://git.archive.org/dps/vault-site/blob/6918109dc09b9ed510521dff74b8427af95940bd/vault/migrations/0013_creating_node.py#L19
        migrations.AlterField(
            model_name="treenode",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="treenode",
            name="size",
            field=models.PositiveBigIntegerField(blank=True, default=0, null=True),
        ),
        # Note: sql/reverse_sql are intentionally reversed bc the desired
        # behavior is to re-establish triggers
        migrations.RunSQL(
            sql=REVERSE_SQL,
            reverse_sql=SQL,
        ),
    ]
