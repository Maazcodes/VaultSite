# pylint: disable=invalid-name
# Generated by Django 3.2.9 on 2022-03-30 19:09

from django.db import connection, migrations, models
import django.db.models.deletion


def _set_deposit_parent_node_ids_as_collection_nodes(
    apps,  # pylint: disable=unused-argument
    schema_editor,  # pylint: disable=unused-argument
):
    with connection.cursor() as cursor:
        cursor.execute(
            """
            UPDATE vault_deposit
            SET parent_node_id = c.tree_node_id
            FROM vault_collection AS c
            WHERE c.id = collection_id
        """
        )


class Migration(migrations.Migration):
    """Adds Deposit.parent_node_id  and backfills ids from Collection-related
    Treenode ids.
    """

    dependencies = [
        ("vault", "0034_ensure_org_coll_treenodes_exist"),
    ]

    operations = [
        # 1. add Deposit.parent_node_id as nullable
        migrations.AddField(
            model_name="deposit",
            name="parent_node",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="vault.treenode",
            ),
        ),
        # 2. backfill parent_node_id from TreeNodes related to Deposit.collection
        migrations.RunPython(
            code=_set_deposit_parent_node_ids_as_collection_nodes,
            reverse_code=migrations.RunPython.noop,
        ),
        # 3. add NOT NULL constraint to Deposit.parent_node_id
        migrations.AlterField(
            model_name="deposit",
            name="parent_node",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="vault.treenode",
            ),
        ),
    ]
