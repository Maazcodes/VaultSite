# pylint: disable=invalid-name
# Generated by Django 3.2.9 on 2022-04-07 20:25


from django.db import migrations


SQL = """
CREATE OR REPLACE FUNCTION _do_treenode_insert_file_accounting() RETURNS TRIGGER AS
$$
BEGIN
    IF NEW.deleted THEN
        -- case: TreeNode perversely inserted as soft-deleted, in which case
        -- its ancestors' accounting shouldn't reflect the new node
        RETURN NULL;
    END IF;

    UPDATE vault_treenode
    SET
        file_count = file_count + 1,
        size = COALESCE(size, 0) + COALESCE(NEW.size, 0)
    WHERE
        path @> (
            SELECT path
            FROM vault_treenode
            WHERE id = NEW.parent_id
        );

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION _do_treenode_delete_file_accounting() RETURNS TRIGGER AS
$$
DECLARE
    size_delta int;
BEGIN
    IF OLD.deleted THEN
        -- case: TreeNode in question already soft-deleted; skip updating
        -- ancestors' accounting to prevent double-counting deletion metrics
        RETURN NULL;
    END IF;

    IF OLD.node_type != 'FILE' THEN
        size_delta = 0;
    ELSE
        size_delta = COALESCE(OLD.size, 0);
    END IF;

    UPDATE vault_treenode
    SET
        file_count = file_count - 1,
        size = COALESCE(size, 0) - size_delta
    WHERE
        path @> OLD.path
    AND
        path != OLD.path;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;
"""


#: The previous definition of these trigger functions, introduced in
#: ./0033_treenode_file_accounting_triggers.py
REVERSE_SQL = """
CREATE OR REPLACE FUNCTION _do_treenode_insert_file_accounting() RETURNS TRIGGER AS
$$
BEGIN
    UPDATE vault_treenode
    SET
        file_count = file_count + 1,
        size = COALESCE(size, 0) + COALESCE(NEW.size, 0)
    WHERE
        path @> (
            SELECT path
            FROM vault_treenode
            WHERE id = NEW.parent_id
        );

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION _do_treenode_delete_file_accounting() RETURNS TRIGGER AS
$$
DECLARE
    size_delta int;
BEGIN
    IF OLD.node_type != 'FILE' THEN
        size_delta = 0;
    ELSE
        size_delta = COALESCE(OLD.size, 0);
    END IF;

    UPDATE vault_treenode
    SET
        file_count = file_count - 1,
        size = COALESCE(size, 0) - size_delta
    WHERE
        path @> OLD.path
    AND
        path != OLD.path;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;
"""


class Migration(migrations.Migration):
    dependencies = [
        ("vault", "0035_adds_deposit_parent_node"),
    ]

    operations = [
        migrations.RunSQL(
            sql=SQL,
            reverse_sql=REVERSE_SQL,
        ),
    ]
